version: '3.8'

services:
  # üåç Database - PostgreSQL with advanced configuration
  db:
    image: postgres:15-alpine
    container_name: sitebuilder_db
    environment:
      POSTGRES_DB: sitebuilder
      POSTGRES_USER: sitebuilder
      POSTGRES_PASSWORD: sitebuilder123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - sitebuilder_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sitebuilder -d sitebuilder"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üöÄ Redis Cache with persistence
  redis:
    image: redis:7-alpine
    container_name: sitebuilder_redis
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sitebuilder_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üåê Main Application
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: sitebuilder_web
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=0
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - DATABASE_URL=postgresql://sitebuilder:sitebuilder123@db:5432/sitebuilder
      - REDIS_URL=redis://:redis123@redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@sitebuilder.com
      - DJANGO_SUPERUSER_PASSWORD=admin123
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=sitebuilder
      - DB_PASSWORD=sitebuilder123
      - DB_NAME=sitebuilder
    networks:
      - sitebuilder_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üîÑ Celery Worker for background tasks
  celery:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: sitebuilder_celery
    command: celery -A backend worker -l info --concurrency=4
    volumes:
      - .:/app
      - logs_volume:/app/logs
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://sitebuilder:sitebuilder123@db:5432/sitebuilder
      - REDIS_URL=redis://:redis123@redis:6379/0
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=sitebuilder
      - DB_PASSWORD=sitebuilder123
      - DB_NAME=sitebuilder
    networks:
      - sitebuilder_network
    restart: unless-stopped

  # üìä Celery Beat for scheduled tasks
  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: sitebuilder_celery_beat
    command: celery -A backend beat -l info
    volumes:
      - .:/app
      - logs_volume:/app/logs
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://sitebuilder:sitebuilder123@db:5432/sitebuilder
      - REDIS_URL=redis://:redis123@redis:6379/0
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=sitebuilder
      - DB_PASSWORD=sitebuilder123
      - DB_NAME=sitebuilder
    networks:
      - sitebuilder_network
    restart: unless-stopped

  # üåê Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sitebuilder_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    networks:
      - sitebuilder_network
    restart: unless-stopped

  # üìà Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: sitebuilder_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sitebuilder_network
    restart: unless-stopped

  # üìä Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: sitebuilder_grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - sitebuilder_network
    restart: unless-stopped

  # üîç Elasticsearch for logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: sitebuilder_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - sitebuilder_network
    restart: unless-stopped

  # üìù Kibana for log visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: sitebuilder_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - sitebuilder_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs_volume:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  sitebuilder_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16