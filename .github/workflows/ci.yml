name: 🚀 PEY Builder CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # 🧪 تست‌های Python
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11]

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "backend/requirements.txt" ]; then
            pip install -r backend/requirements.txt
          fi
          if [ -f "requirements-test.txt" ]; then
            pip install -r requirements-test.txt
          fi
          pip install pytest pytest-django

      - name: 🧪 Run Basic Tests
        run: |
          if [ -f "tests/test_basic.py" ]; then
            python -m pytest tests/test_basic.py -v
          else
            echo "No basic tests found"
          fi

      - name: 🧪 Run Security Tests
        run: |
          if [ -f "tests/test_security.py" ]; then
            python -m pytest tests/test_security.py -v
          else
            echo "No security tests found"
          fi

      - name: 🧪 Run Django Tests (if available)
        run: |
          if [ -d "backend" ] && [ -f "backend/manage.py" ]; then
            cd backend
            python manage.py check || echo "Django check failed"
            cd ..
          else
            echo "Django not found, skipping"
          fi
        continue-on-error: true

  # 🧪 تست‌های Node.js
  test-node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: |
          if [ -f "package.json" ]; then
            npm install
          else
            echo "No package.json found"
          fi

      - name: 🧪 Run Tests
        run: |
          if [ -f "package.json" ]; then
            npm test || echo "Tests failed but continuing"
          else
            echo "No package.json found, skipping tests"
          fi
        continue-on-error: true

      - name: 🔍 Run Linting
        run: |
          if [ -f "package.json" ] && npm run lint --silent 2>/dev/null; then
            npm run lint
          else
            echo "No linting script found"
          fi
        continue-on-error: true

  # 🔒 تست‌های امنیتی
  security:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install Security Tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety pytest
          if [ -f "backend/requirements.txt" ]; then
            pip install -r backend/requirements.txt
          fi
          if [ -f "requirements-test.txt" ]; then
            pip install -r requirements-test.txt
          fi

      - name: 🔍 Security Scan with Bandit
        run: |
          if [ -d "backend" ]; then
            bandit -r backend/ -f json -o bandit-report.json || echo "Bandit scan completed"
          else
            echo "No backend directory found" > bandit-report.json
          fi
        continue-on-error: true

      - name: 🔍 Dependency Security Check
        run: |
          safety check --json --output safety-report.json || echo "Safety check completed"
        continue-on-error: true

      - name: 🧪 Run Security Tests
        run: |
          if [ -f "tests/test_security.py" ]; then
            python -m pytest tests/test_security.py -v
          else
            echo "No security tests found"
          fi
        continue-on-error: true

      - name: 📊 Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports-${{ github.run_number }}
          path: |
            bandit-report.json
            safety-report.json
        continue-on-error: true

  # 🏗️ Build
  build:
    needs: [test-python, test-node, security]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Build Docker Image
        run: |
          if [ -f "Dockerfile" ]; then
            docker build -t pey-builder:latest .
            docker tag pey-builder:latest pey-builder:${{ github.sha }}
            echo "Docker image built successfully"
          else
            echo "No Dockerfile found"
          fi
        continue-on-error: true

      - name: 🚀 Deploy Message
        if: github.ref == 'refs/heads/main'
        run: |
          echo "🚀 PEY Builder ready for deployment!"

  # 📊 گزارش‌گیری
  report:
    needs: [test-python, test-node, security, build]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: 📊 Generate Report
        run: |
          echo "## 🧪 PEY Builder Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🐍 Python Tests | ${{ needs.test-python.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🟢 Node.js Tests | ${{ needs.test-node.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔒 Security Tests | ${{ needs.security.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🏗️ Build | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
